<?php

/**
 * @file
 * Thunder Article module hooks.
 */

use Drupal\Core\Cache\Cache;

/**
 * Implements hook_menu_local_tasks_alter().
 */
function thunder_article_menu_local_tasks_alter(&$data, $route_name) {
  foreach ($data['tabs'] as $key => $tab) {
    foreach ($tab as $task => $link) {
      if (in_array($task, ['views_view:view.scheduler_scheduled_content.overview', 'thunder_article.content_view:thunder_article.scheduler'], TRUE)) {
        // Access configuration inside the loop so that we don't do unnecessary
        // queries.
        $config = \Drupal::service('config.factory')->get('thunder_article.settings');
        $link_ref = &$data['tabs'][$key][$task];
        $link_ref['#access'] = ($task === 'views_view:view.scheduler_scheduled_content.overview' xor $config->get('move_scheduler_local_task'));
        $link_ref['#cache']['tags'] = Cache::mergeTags(isset($link_ref['#cache']['tags']) ? $link_ref['#cache']['tags'] : [], $config->getCacheTags());
      }
    }
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function thunder_article_entity_type_alter(array &$entity_types) {
  /* @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  if (!empty($entity_types['node'])) {
    $entity_types['node']->setFormClass('default', 'Drupal\thunder_article\Form\ThunderNodeForm');
    $entity_types['node']->setFormClass('edit', 'Drupal\thunder_article\Form\ThunderNodeForm');
  }
}

/**
 * Implements hook_metatag_tags_alter().
 */
function thunder_article_metatag_tags_alter(array &$definition) {
  foreach (\Drupal::config('thunder_article.settings')->get('thunder_article_metatags') as $tag) {
    $definition[$tag]['group'] = 'thunder_article';
  }
}
