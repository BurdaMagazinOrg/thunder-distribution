<?php

/**
 * @file
 * The install file.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 *
 * Configures form and view display of the field_embed_media.
 */
function thunder_liveblog_install() {
  if ($field = FieldConfig::load('node.liveblog.body')) {
    $field->delete();
  }

  // Add permissions to thunder users.
  $liveblog_permissions = [
    'add liveblog_post entity',
    'create liveblog content',
    'delete any liveblog content',
    'delete liveblog revisions',
    'delete liveblog_post entity',
    'delete own liveblog content',
    'edit any liveblog content',
    'edit liveblog_post entity',
    'edit own liveblog content',
    'revert liveblog revisions',
    'view liveblog revisions',
  ];
  foreach (['editor', 'seo'] as $role) {
    if ($role = Role::load($role)) {
      foreach ($liveblog_permissions as $permission) {
        $role->grantPermission($permission);
      }
      $role->save();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function thunder_liveblog_uninstall() {
  $logger = \Drupal::logger('thunder_liveblog');

  $fields = [
    'liveblog_post.liveblog_post.field_embed_media',
    'node.liveblog.field_paragraphs',
  ];
  foreach ($fields as $field) {
    try {
      if ($field = FieldConfig::load($field)) {
        $field->delete();
      }
    }
    catch (\Exception $e) {
      $logger->warning(sprintf('Unable to uninstall config: %s.', $field));
    }
  }
}

/**
 * Adds image to the list of available paragraphs.
 */
function thunder_liveblog_update_8101() {

  /** @var \Drupal\thunder_updater\Updater $thunderUpdater */
  $thunderUpdater = \Drupal::service('thunder_updater');
  $updateLogger = $thunderUpdater->logger();

  /** @var \Drupal\field\Entity\FieldConfig $field */
  $field = FieldConfig::load('liveblog_post.liveblog_post.field_embed_media');

  if ($field) {
    $settings = $field->getSetting('handler_settings');

    $settings['target_bundles']['image'] = 'image';
    $settings['target_bundles_drag_drop']['image'] = ['enabled' => TRUE, 'weight' => -17];

    $field->setSetting('handler_settings', $settings);

    try {
      $field->save();
      $updateLogger->info(t('Image paragraph added to the liveblog post field "embed_media".'));
    }
    catch (Exception $e) {
      $updateLogger->error(t('There was an error, while saving the liveblog post field "embed_media", please try to add the image paragraph manually.'));
    }
  }
  else {
    $updateLogger->warning(t('Liveblog post field "embed_media" was not found. Please try to add the image paragraph manually.'));
  }

  // Output logged result of update hook execution.
  return $updateLogger->output();
}

/**
 * Provide nicer liveblog form display.
 */
function thunder_liveblog_update_8102() {
  /** @var \Drupal\thunder_updater\Updater $thunderUpdater */
  $thunderUpdater = \Drupal::service('thunder_updater');
  $updateLogger = $thunderUpdater->logger();
  if ($thunderUpdater->executeUpdates([['thunder_liveblog', 'thunder_liveblog__update_8102']])) {
    $updateLogger->info(t('New form display successfully installed.'));
  }
  else {
    $updateLogger->warning(t('There was an error during the update of the liveblog form display.'));
  }

  // Output logged messages to related channel of update execution.
  return $thunderUpdater->logger()->output();
}
